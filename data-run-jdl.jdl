// Define Enums
enum TeamType {
    ITNS_DISTRIBUTION,
    ITNS_WAREHOUSE,
    IRS_DISTRIBUTION,
    IRS_WAREHOUSE,
    CHV_PATIENTS
}

enum EntryTypeEnum {
    DISPENSED
    RETURNED
    RECEIVED
    CLOSINGBALANCE
    INITIALBALANCE
}

enum SettlementEnum {
    RESIDENTS
    IDPSCAMP
}

enum SurveyTypeEnum {
    ACTUALREPORT
    TESTREPORT
}

enum PublicLocationType {
    DISTRICT
    SUBDISTRICT
    SUBVILLAGE
}

enum Gender {
    MALE
    FEMALE
}

enum MTestResult {
    NEGATIVE,
    PF,
    PV,
    MIX,
    INVALID
}

enum MDetectionType {
    REACTIVE
    ACTIVE
}

enum MSeverity {
    SIMPLE
    SEVERE
}

enum MTreatment {
    TREATED
    FIRSTDOSE
    REFERAL
}

enum MSessionSubject {
    ITNs
    BreadingSite
    TRANSMISSION_PREVENTION
}

enum SyncableStatus {
    ACTIVE
    COMPLETED
}

entity Project {
    uid String unique maxlength(11)
    code String unique
    name String
    disabled Boolean
}

entity Activity {
    uid String unique maxlength(11)
    code String unique
    name String
    startDate Instant required
    endDate Instant
    disabled Boolean
    deleteClientData Boolean
}

entity VillageLocation {
    uid String required unique maxlength(11)
    code String unique required
    name String
    mappingStatus Integer
    districtCode Integer
    villageUid String
    subdistrictName String
    villageName String
    subvillageName String
    urbanRuralId Integer
    urbanRural String
    settlement String
    pop2004 Double
    pop2022 Double
    longitude Double
    latitude Double
    ppcCodeGis String required
    level PublicLocationType
}

entity Assignment {
    uid String required unique maxlength(11)
    code String
    phaseNo Integer
    // fieldCode
    districtCode Integer
    gov String
    district String
    subdistrict String
    village String
    subvillage String
    name String
    dayId Integer
    population Double
    itnsPlanned Integer
    targetType Integer
    longitude Double
    latitude Double
    startDate Instant
}

entity ItnsVillage {
    uid String required unique maxlength(11)
    code String unique
    name String
    submissionUuid String unique required
    submissionId Long required
    workDayDate Instant
    surveytype SurveyTypeEnum
    otherReasonComment String maxlength(2000)
    reasonNotcomplete String maxlength(2000)
    settlement SettlementEnum
    settlementName String maxlength(2000)
    tlCommenet String  maxlength(2000)
    timeSpentHours Integer
    timeSpentMinutes Integer
    difficulties String maxlength(2000)
    locationCaptured String
    locationCaptureTime Instant
    hoProof String
    hoProofUrl String
    submissionTime Instant
    untargetingOtherSpecify String
    otherVillageName String maxlength(2000)
    otherVillageCode String maxlength(2000)
    otherTeamNo Long
    startEntryTime Instant
    finishedEntryTime Instant
    deleted Boolean
    status SyncableStatus required
}

entity ItnsVillageHousesDetail {
    uid String required unique maxlength(11)
    code String unique
    couponId Long
    name String
    male Integer min(0)
    female Integer min(0)
    pregnant Integer min(0)
    population Integer min(0)
    maleChild Integer min(0)
    femaleChild Integer min(0)
    displaced Integer min(0)
    itns Integer min(0)
    comment String maxlength(2000)
    submissionUuid String
    houseUuid String unique
    deleted Boolean
}

entity ProgressStatus {
    uid String required unique maxlength(11)
    code String unique
    name String
}

entity ReviewTeam {
    uid String required unique maxlength(11)
    code String unique
    name String
    user String
}

entity Team {
    uid String required unique maxlength(11)
    code String required
    name String
    description String
    mobile String
    workers Integer
    mobility String
    teamType TeamType required,
    disabled Boolean,
    deleteClientData Boolean
}

entity Warehouse {
    uid String required unique maxlength(11)
    code String required
    name String
    description String
    gpsCoordinate String
    supervisor String
    supervisorMobile String
}

entity WarehouseItem {
    uid String required unique maxlength(11)
    code String
    name String
    description String
}

entity WarehouseTransaction {
    uid String required unique maxlength(11)
    code String
    name String
    imovUid String unique required
    transactionDate Instant required
    phaseNo Integer
    entryType String required
    quantity Integer required min(0)
    notes String maxlength(2000)
    personName String maxlength(2000)
    workDayId Integer
    submissionTime Instant
    submissionId Long
    deleted Boolean
    submissionUuid String
    startEntryTime Instant
    finishedEntryTime Instant
    status SyncableStatus required
}

entity ChvRegister {
    uid String required unique maxlength(11)
    code String
    name String required
    locationName String
    age Integer
    gender Gender
    visitDate Instant required
    pregnant Boolean
    testResult MTestResult
    detectionType MDetectionType
    severity MSeverity
    treatment MTreatment
    deleted Boolean
    startEntryTime Instant
    finishedEntryTime Instant
    comment String maxlength(2000)
    status SyncableStatus required
}

entity ChvSession {
    uid String required unique maxlength(11)
    code String
    name String
    sessionDate Instant required
    subject MSessionSubject
    sessions Integer required
    people Integer required
    comment String
    deleted Boolean
    startEntryTime Instant
    finishedEntryTime Instant
    status SyncableStatus required required
}

entity RefreshToken {
    uid String unique maxlength(11)
    token String required unique
    expiryDate Instant
}

//SystemFormType
entity TeamFormAccess {
    uid String required unique maxlength(11)
    code String
    name String
    sessionDate Instant required
    subject MSessionSubject
    sessions Integer required
    people Integer required
    comment String
    deleted Boolean
    startEntryTime Instant
    finishedEntryTime Instant
    status SyncableStatus
}

// Define Relationships
relationship ManyToOne {
    RefreshToken{user(login) required} to User with builtInEntity
}

relationship ManyToOne {
    ChvRegister{location(code)} to Assignment
}

relationship ManyToOne {
    ChvRegister {activity (code) required} to Activity
}

relationship ManyToOne {
    ChvRegister{team(code) required} to Team
}


relationship ManyToOne {
    ChvSession{team(code) required} to Team
}

relationship ManyToOne {
    ChvSession {activity (code) required} to Activity
}

relationship ManyToOne {
    Activity{project(name) required} to Project{activity}
}

relationship ManyToOne {
    ItnsVillage {progressStatus (name)} to ProgressStatus
}

relationship ManyToOne {
    ItnsVillage {team (code) required} to Team
}

relationship ManyToOne {
    ItnsVillage {assignment(code) required} to Assignment
}

relationship ManyToOne {
    ItnsVillage {activity (code) required} to Activity
}

relationship OneToMany {
    ItnsVillage{houseDetail} to ItnsVillageHousesDetail {itnsVillage required}
}

relationship ManyToOne {
    Team {activity (code)} to Activity
}

relationship ManyToOne {
    Team {operationRoom (name)} to ReviewTeam
}

relationship ManyToOne {
    Team {warehouse (name)} to Warehouse
}

relationship ManyToOne {
    Warehouse {activity (code)} to Activity
}

relationship ManyToOne {
    WarehouseTransaction {item (name)} to WarehouseItem
}

relationship ManyToOne {
    WarehouseTransaction {sourceWarehouse (name)} to Warehouse
}

relationship ManyToOne {
    WarehouseTransaction {team (code)} to Team
}

relationship ManyToOne {
    WarehouseTransaction {warehouse (name) required} to Warehouse
}

relationship ManyToOne {
    WarehouseTransaction {activity (code)} to Activity
}

relationship ManyToOne {
    Assignment {activity (code)} to Activity
}

relationship ManyToOne {
    Assignment {organisationUnit (code)} to VillageLocation
}

relationship ManyToOne {
    Assignment {team (code) required} to Team {assignment}
}

relationship ManyToOne {
    Assignment {warehouse (name)} to Warehouse
}

relationship ManyToOne {
    Team{userInfo(login)} to User {team} with builtInEntity
}

relationship ManyToOne {
    RefreshToken{user(login) required} to User with builtInEntity
}

//dto * with mapstruct

service * with serviceImpl
paginate RefreshToken, ChvRegister, ChvSession, Assignment, Activity, Team, Warehouse, WarehouseTransaction, ItnsVillageHousesDetail, ItnsVillage, VillageLocation with pagination
