// Define Enums
enum EntryTypeEnum {
  DISPENSED
  RETURNED
  RECEIVED
  CLOSINGBALANCE
  INITIALBALANCE
}

enum SettlementEnum {
  RESIDENTS
  IDPSCAMP
}

enum SurveyTypeEnum {
  ACTUALREPORT
  TESTREPORT
}

enum PublicLocationType {
  DISTRICT
  SUBDISTRICT
  SUBVILLAGE
}

enum Gender {
  MALE
  FEMALE
}

enum MTestResult {
 NEGATIVE, PF, PV, MIX, INVALID
}

enum MDetectionType {
  REACTIVE
  ACTIVE
}

enum MSeverity {
  SIMPLE
  SEVERE
}

enum MTreatment {
  TREATED
  FIRSTDOSE
  REFERAL
}

enum MSessionSubject {
  ITNs
  BreadingSite
  TRANSMISSION_PREVENTION
}

entity Project(project) {
 uid String unique maxlength(11)
 code String unique
 name String
 displayed Boolean 
} 

entity Activity(activity) {
 uid String unique maxlength(11)
 code String unique
 name String
 startDate Instant required
 endDate Instant
 active Boolean
}

entity VillageLocation {
  uid String unique maxlength(11)
  code String unique required
  name String
  mappingStatus Integer
  districtCode Integer
  villageUid String
  subdistrictName String
  villageName String
  subvillageName String
  urbanRuralId Integer
  urbanRural String
  settlement String
  pop2004 Double
  pop2022 Double
  longitude Double
  latitude Double
  ppcCodeGis String required
  level PublicLocationType
}

entity Assignment {
  uid String unique maxlength(11)
  code String
  phaseNo Integer
  // fieldCode
  districtCode Integer
  gov String
  district String
  subdistrict String
  village String
  subvillage String
  name String
  dayId Integer
  population Double
  itnsPlanned Integer
  targetType Integer
  longitude Double
  latitude Double
  startDate Instant
}

entity ItnsVillage {
  uid String unique maxlength(11)
  code String unique
  name String
  submissionUuid String unique required
  submissionId Long required
  workDayDate Instant
  surveytype SurveyTypeEnum
  otherReasonComment String maxlength(2000)
  reasonNotcomplete String maxlength(2000)
  settlement SettlementEnum
  settlementName String maxlength(2000)
  tlCommenet String  maxlength(2000)
  timeSpentHours Integer
  timeSpentMinutes Integer
  difficulties String maxlength(2000)
  locationCaptured String
  locationCaptureTime Instant
  hoProof String
  startEntryTime Instant
  endEntryTime Instant
  finishedEntryTime Instant
  hoProofUrl String
  submissionTime Instant
  untargetingOtherSpecify String
  otherVillageName String maxlength(2000)
  otherVillageCode String maxlength(2000)
  otherTeamNo Long
  deleted Boolean
}

entity ItnsVillageHousesDetail {
  uid String unique maxlength(11)
  code String unique
  couponId Long
  name String
  male Integer min(0)
  female Integer min(0)
  pregnant Integer min(0)
  population Integer min(0)
  maleChild Integer min(0)
  femaleChild Integer min(0)
  displaced Integer min(0)
  itns Integer min(0)
  comment String maxlength(2000)
  submissionUuid String
  deleted Boolean
  houseUuid String unique
}

entity ProgressStatus {
  uid String unique maxlength(11)
  code String unique
  name String
}

entity ReviewTeam {
  uid String unique maxlength(11)
  code String unique
  name String
  user String
}

entity Team {
  uid String unique maxlength(11)
  code String required
  name String
  description String
  mobile String
  workers Integer
  mobility String
}

entity Warehouse {
  uid String unique maxlength(11)
  code String required
  name String
  description String
  gpsCoordinate String
  supervisor String
  supervisorMobile String
}

entity WarehouseItem {
  uid String unique maxlength(11)
  code String
  name String
  description String
}

entity WarehouseTransaction {
  uid String unique maxlength(11)
  code String
  name String
  imovUid String unique required
  transactionDate Instant required
  phaseNo Integer
  entryType String required
  quantity Integer required min(0)
  notes String maxlength(2000)
  personName String maxlength(2000)
  workDayId Integer
  submissionTime Instant
  submissionId Long
  deleted Boolean
  submissionUuid String
}

entity PatientInfo {
 uid String unique maxlength(11)
 code String unique
 name String
 age Integer min(1) max(140)
 gender Gender 
} 

entity ChvRegister {
 uid String unique maxlength(11)
 code String
 name String
 visitDate Instant required
 age Integer min(1) max(140) required
 pregnant Boolean
 testResult MTestResult
 detectionType MDetectionType
 severity MSeverity
 treatment MTreatment
 comment String
 startEntryTime Instant
 deleted Boolean
}

entity ChvSessions {
 uid String unique maxlength(11)
 code String
 name String
 sessionDate Instant required
 subject MSessionSubject
 sessions Integer required
 people Integer required
 comment String
 startEntryTime Instant
 deleted Boolean
}

// Define Relationships
relationship ManyToOne {
  PatientInfo{location(code)} to Assignment
}

relationship ManyToOne {
  ChvRegister{patient(name)} to PatientInfo
}

relationship ManyToOne {
  ChvRegister{team(code)} to Team
}

relationship ManyToOne {
  ChvSessions{team(code)} to Team
}

relationship ManyToOne {
  Activity{project(name)} to Project{activity}
}

relationship ManyToOne {
  ItnsVillage { progressStatus (name)} to ProgressStatus
}

relationship ManyToOne {
  ItnsVillage { team (code) required} to Team
}

relationship ManyToOne {
  ItnsVillage { assignment(code) required} to Assignment
}

relationship ManyToOne {
  ItnsVillage { activity (code)} to Activity 
}

relationship ManyToOne {
  ItnsVillageHousesDetail { villageData required} to ItnsVillage{houseDetail}
}

relationship ManyToOne {
  Team { activity (code)} to Activity 
}

relationship ManyToOne {
  Team { operationRoom (name)} to ReviewTeam 
}

relationship ManyToOne {
  Team { warehouse (name)} to Warehouse 
}

relationship ManyToOne {
  Warehouse { activity (code)} to Activity 
}

relationship ManyToOne {
  WarehouseTransaction { item (name)} to WarehouseItem 
}

relationship ManyToOne {
  WarehouseTransaction { sourceWarehouse (name)} to Warehouse 
}

relationship ManyToOne {
  WarehouseTransaction { team (code)} to Team 
}

relationship ManyToOne {
  WarehouseTransaction { warehouse (name) required} to Warehouse 
}

relationship ManyToOne {
  WarehouseTransaction { activity (code)} to Activity
}

relationship ManyToOne {
  Assignment { activity (code)} to Activity
}

relationship ManyToOne {
  Assignment { organisationUnit (code)} to VillageLocation
}

relationship ManyToOne {
  Assignment { team (code)} to Team {assignment}
}

relationship ManyToOne {
  Assignment { warehouse (name) } to Warehouse
}

relationship ManyToOne {
  Team{userInfo(login)} to User {team} with builtInEntity
}

//dto * with mapstruct

service * with serviceImpl
paginate PatientInfo, ChvRegister, ChvSessions, Assignment, Activity, Team, Warehouse, WarehouseTransaction, 
	ItnsVillageHousesDetail, ItnsVillage, VillageLocation with pagination