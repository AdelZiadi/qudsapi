# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
name: datarunapi
services:
  postgresql:
    image: postgres:16.2
    container_name: datarunapi-postgresql
#    volumes:
#      - ./dataRunApi_backup.dump:/docker-entrypoint-initdb.d/dataRunApi_backup.dump
#      - ~/volumes/jhipster/dataRunApi/postgresql/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${DATABASE_PORT}:5432
#    command: >
#      bash -c "
#      docker-entrypoint.sh postgres &
#      pid=$$!;
#      while ! pg_isready -U ${DATABASE_USER}; do
#        sleep 1;
#      done;
#      pg_restore -U ${DATABASE_USER} -d ${DATABASE_NAME} /docker-entrypoint-initdb.d/dataRunApi_backup.dump;
#      wait $$pid;
#      "
