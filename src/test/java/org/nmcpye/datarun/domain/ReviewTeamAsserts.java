package org.nmcpye.datarun.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReviewTeamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewTeamAllPropertiesEquals(ReviewTeam expected, ReviewTeam actual) {
        assertReviewTeamAutoGeneratedPropertiesEquals(expected, actual);
        assertReviewTeamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewTeamAllUpdatablePropertiesEquals(ReviewTeam expected, ReviewTeam actual) {
        assertReviewTeamUpdatableFieldsEquals(expected, actual);
        assertReviewTeamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewTeamAutoGeneratedPropertiesEquals(ReviewTeam expected, ReviewTeam actual) {
        assertThat(expected)
            .as("Verify ReviewTeam auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewTeamUpdatableFieldsEquals(ReviewTeam expected, ReviewTeam actual) {
        assertThat(expected)
            .as("Verify ReviewTeam relevant properties")
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewTeamUpdatableRelationshipsEquals(ReviewTeam expected, ReviewTeam actual) {}
}
