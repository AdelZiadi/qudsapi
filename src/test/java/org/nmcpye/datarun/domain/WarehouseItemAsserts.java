package org.nmcpye.datarun.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WarehouseItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseItemAllPropertiesEquals(WarehouseItem expected, WarehouseItem actual) {
        assertWarehouseItemAutoGeneratedPropertiesEquals(expected, actual);
        assertWarehouseItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseItemAllUpdatablePropertiesEquals(WarehouseItem expected, WarehouseItem actual) {
        assertWarehouseItemUpdatableFieldsEquals(expected, actual);
        assertWarehouseItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseItemAutoGeneratedPropertiesEquals(WarehouseItem expected, WarehouseItem actual) {
        assertThat(expected)
            .as("Verify WarehouseItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseItemUpdatableFieldsEquals(WarehouseItem expected, WarehouseItem actual) {
        assertThat(expected)
            .as("Verify WarehouseItem relevant properties")
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWarehouseItemUpdatableRelationshipsEquals(WarehouseItem expected, WarehouseItem actual) {}
}
