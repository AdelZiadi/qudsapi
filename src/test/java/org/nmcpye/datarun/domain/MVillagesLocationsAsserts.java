package org.nmcpye.datarun.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MVillagesLocationsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMVillagesLocationsAllPropertiesEquals(MVillagesLocations expected, MVillagesLocations actual) {
        assertMVillagesLocationsAutoGeneratedPropertiesEquals(expected, actual);
        assertMVillagesLocationsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMVillagesLocationsAllUpdatablePropertiesEquals(MVillagesLocations expected, MVillagesLocations actual) {
        assertMVillagesLocationsUpdatableFieldsEquals(expected, actual);
        assertMVillagesLocationsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMVillagesLocationsAutoGeneratedPropertiesEquals(MVillagesLocations expected, MVillagesLocations actual) {
        assertThat(expected)
            .as("Verify MVillagesLocations auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMVillagesLocationsUpdatableFieldsEquals(MVillagesLocations expected, MVillagesLocations actual) {
        assertThat(expected)
            .as("Verify MVillagesLocations relevant properties")
            .satisfies(e -> assertThat(e.getUid()).as("check uid").isEqualTo(actual.getUid()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getMappingStatus()).as("check mappingStatus").isEqualTo(actual.getMappingStatus()))
            .satisfies(e -> assertThat(e.getDistrictCode()).as("check districtCode").isEqualTo(actual.getDistrictCode()))
            .satisfies(e -> assertThat(e.getVillageUid()).as("check villageUid").isEqualTo(actual.getVillageUid()))
            .satisfies(e -> assertThat(e.getSubdistrictName()).as("check subdistrictName").isEqualTo(actual.getSubdistrictName()))
            .satisfies(e -> assertThat(e.getVillageName()).as("check villageName").isEqualTo(actual.getVillageName()))
            .satisfies(e -> assertThat(e.getSubvillageName()).as("check subvillageName").isEqualTo(actual.getSubvillageName()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getUrbanRuralId()).as("check urbanRuralId").isEqualTo(actual.getUrbanRuralId()))
            .satisfies(e -> assertThat(e.getUrbanRural()).as("check urbanRural").isEqualTo(actual.getUrbanRural()))
            .satisfies(e -> assertThat(e.getSettlement()).as("check settlement").isEqualTo(actual.getSettlement()))
            .satisfies(e -> assertThat(e.getPop2004()).as("check pop2004").isEqualTo(actual.getPop2004()))
            .satisfies(e -> assertThat(e.getPop2022()).as("check pop2022").isEqualTo(actual.getPop2022()))
            .satisfies(e -> assertThat(e.getLongitude()).as("check longitude").isEqualTo(actual.getLongitude()))
            .satisfies(e -> assertThat(e.getLatitude()).as("check latitude").isEqualTo(actual.getLatitude()))
            .satisfies(e -> assertThat(e.getPpcCodeGis()).as("check ppcCodeGis").isEqualTo(actual.getPpcCodeGis()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMVillagesLocationsUpdatableRelationshipsEquals(MVillagesLocations expected, MVillagesLocations actual) {}
}
